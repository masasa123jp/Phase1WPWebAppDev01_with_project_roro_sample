name: RoRo Core CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  php-syntax:
    name: PHP syntax check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
      - name: Syntax check
        run: |
          # Recursively find PHP files and run `php -l` on each.  This
          # detects parse errors early in the CI pipeline.
          find . -type f -name '*.php' -print0 | xargs -0 -n1 php -l

  wp-coding-standards:
    name: WordPress Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          tools: composer
      - name: Install WordPress Coding Standards
        run: |
          composer global require --prefer-dist automattic/phpcs-wordpress:dev-main
      - name: Run phpcs
        run: |
          ~/.composer/vendor/bin/phpcs \
            --standard=WordPress \
            --ignore=vendor,tests \
            --extensions=php \
            .

  # Placeholder job for wp-env / Playwright tests.  Developers can
  # extend this job to spin up a WordPress test environment and run
  # integration tests using Playwright or PHPUnit.  This job is
  # currently disabled by default.
  # wp-tests:
  #   name: WP env tests
  #   runs-on: ubuntu-latest
  #   if: false
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Node and wp-env
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - name: Install wp-env
  #       run: npm install -g @wordpress/env
  #     - name: Start wp-env and run tests
  #       run: |
  #         wp-env start
  #         # npm run test:e2e --prefix tests/e2e